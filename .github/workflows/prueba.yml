name: Process Dates and Call NASA API

on:
  push:
    branches:
      - master

jobs:
  process-nasa-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install jq

      - name: Read JSON file and get dates
        id: get_dates
        run: |
          echo "Reading dates.json"
          dates=$(jq -r '.dates[]' dates.json)
          echo "::set-output name=dates::$dates"

      - name: Call NASA API for each date
        id: api_request
        run: |
          mkdir -p nasa_responses
          for date in ${{ steps.get_dates.outputs.dates }}; do
            # Make API request
            api_url="https://api.nasa.gov/planetary/apod?api_key=${{ secrets.API_KEY }}&date=$date"
            echo "Making request to: $api_url"
            
            response=$(curl -s -w "%{http_code}" -o response.json "$api_url")

             # Imprimir la respuesta
            echo "Response for date $date:"
            cat response.json
            
            if [ "$response" -eq 200 ]; then
              echo "Response for date $date saved."
              mv response.json "nasa_responses/response_$date.json"
            else
              echo "Error: Received response code $response for date $date. Skipping."
              rm response.json
            fi
          done

      - name: Download images
        run: |
          for date in ${{ steps.get_dates.outputs.dates }}; do
            if [ -f "nasa_responses/response_$date.json" ]; then
              image_url=$(jq -r '.url' "nasa_responses/response_$date.json")
              echo "Downloading image from: $image_url"
              curl -s -o "img-$date.jpg" "$image_url"
              echo "Image downloaded as img-$date.jpg"
            fi
          done

      - name: Upload images as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: img-*.jpg

      - name: Cache API responses
        uses: actions/cache@v3
        with:
          path: ./nasa_responses
          key: nasa-responses-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            nasa-responses-${{ runner.os }}-

      - name: List cached responses
        run: |
          echo "Cached responses:"
          ls nasa_responses
